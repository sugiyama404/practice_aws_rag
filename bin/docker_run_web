#!/usr/bin/env bash

set -euo pipefail

function docker_build() {
  local cwd="$1"
  local image_name="$2"
  cd "${cwd}"
  docker build -t "$image_name" .
  cd ..
}

function docker_run_web() {
  local cwd="$1"
  env_dir="${cwd}/bin/conf/.env"

  # shellcheck source=/dev/null
  source "${env_dir}"

  image_name=$(grep -v '^image_name=\K.*$' "${env_dir}" | cut -d '=' -f2 || read -p -r "Enter image name: ")

  local apserver_image_name="apserver"
  local container_name="webserver"
  local dirname="webserver"
  local port=3000
  cd "${cwd}"

  image_id=$(docker images -q "$image_name" 2>/dev/null) || true

  if [[ -n "$image_id" ]]; then
    echo "Image webserver exists"
  else
    echo "Image webserver does not exist"
    docker_build "${cwd}/${dirname}" "$image_name"
  fi

  docker run --name "${container_name}" -p "${port}:${port}" --env API_ENDPOINT="http://apserver:8000" --link="${apserver_image_name}" -it --rm "${image_name}:latest"
}

function main() {
  local cwd
  cwd="$(cd "$(dirname "$0")/.." && pwd)"
  docker_run_web "${cwd}"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
